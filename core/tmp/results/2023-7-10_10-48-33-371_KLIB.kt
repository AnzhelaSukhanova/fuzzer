// INVOCATOR_FAIL
// result:[-p, library, -o, lib.klib, projectTmp/oldKlib.kt]
// result:[-p, library, -l, lib.klib, -o, main.klib, projectTmp/main.kt]

// files
// main.kt
// isKlib=false
fun main() {


val gezwm: Xbmzy = object: Xbmzy {
}
val qziox: Acilj = Acilj()
val hyxjz: Sjcvd = Sjcvd
val nduxz: Wiipi = Wiipi()
val zeupy: Kaokq = object: Kaokq {
}
val dotiu: Xgauu = Xgauu()
val ixmcs: Xgauu.Fxytc = Xgauu.Fxytc

val yxabt: Map = qziox.qktb
qziox.qktb = TODO()
}
// oldKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

 
interface Xbmzy
class Acilj{
private var qktb: Map<Map<Kaokq?, Double?>?, List<Char>>  
get() = TODO()
set(value) = TODO()
}
object Sjcvd
class Wiipi
interface Kaokq
class Xgauu{
object Fxytc
}
// newKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

 
interface Xbmzy
class Acilj{
internal var qktb : Map<Map<Kaokq?, Double?>?, List<Char>> 
get() = TODO()
set(value) = TODO()
}
object Sjcvd
class Wiipi
interface Kaokq
class Xgauu{
object Fxytc
}


Combined output:
====================
2 type arguments expected for interface Map<K, out V>
Cannot access 'qktb': it is private in 'Acilj'
Cannot access 'qktb': it is private in 'Acilj'