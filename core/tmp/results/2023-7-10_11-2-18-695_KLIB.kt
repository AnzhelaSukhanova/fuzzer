// INVOCATOR_FAIL
// result:[-p, library, -o, lib.klib, projectTmp/oldKlib.kt]
// result:[-p, library, -l, lib.klib, -o, main.klib, projectTmp/main.kt]

// files
// main.kt
// isKlib=false
fun main() {


val fmbsp: Zoyly = Zoyly()
val rwcrp: String = box()
val nkujs: UByte = fmbsp.qohzd<Int>()

}
// oldKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..8
    for (i in intProgression step 2 step 3) {
        intList += i
    }
    assertEquals(listOf(1, 4, 7), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..8L
    for (i in longProgression step 2L step 3L) {
        longList += i
    }
    assertEquals(listOf(1L, 4L, 7L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'h'
    for (i in charProgression step 2 step 3) {
        charList += i
    }
    assertEquals(listOf('a', 'd', 'g'), charList)

    return "OK"
}
internal fun  mqrrp(): UShort { TODO() }
class Zoyly{
fun <T>  qohzd(): UByte? { TODO() }
}
// newKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    val intProgression = 1..8
    for (i in intProgression step 2 step 3) {
        intList += i
    }
    assertEquals(listOf(1, 4, 7), intList)

    val longList = mutableListOf<Long>()
    val longProgression = 1L..8L
    for (i in longProgression step 2L step 3L) {
        longList += i
    }
    assertEquals(listOf(1L, 4L, 7L), longList)

    val charList = mutableListOf<Char>()
    val charProgression = 'a'..'h'
    for (i in charProgression step 2 step 3) {
        charList += i
    }
    assertEquals(listOf('a', 'd', 'g'), charList)

    return "OK"
}
internal fun  mqrrp(): UShort { TODO() }
class Zoyly{
fun <T>  qohzd(): UByte? { TODO() }
object Foxgs
}


Combined output:
====================
Type mismatch: inferred type is UByte? but UByte was expected
Type mismatch: inferred type is UByte? but UByte was expected