// INVOCATOR_FAIL
// result:[-p, library, -o, lib.klib, projectTmp/oldKlib.kt]
// result:[-p, library, -l, lib.klib, -o, main.klib, projectTmp/main.kt]

// files
// main.kt
// isKlib=false
fun main() {


val hjwyt: Muern = object: Muern {
}
val raosq: String = box()
val bvexp: Short = hzyfj()

}
// oldKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression  = 1u..10u
    for (i in (uintProgression.reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(2u, 5u, 8u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL..10uL
    for (i in (ulongProgression.reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(2uL, 5uL, 8uL), ulongList)

    return "OK"
}
interface Muern
external  fun  hzyfj(): Short?
// newKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val uintList = mutableListOf<UInt>()
    val uintProgression  = 1u..10u
    for (i in (uintProgression.reversed() step 2).reversed() step 3) {
        uintList += i
    }
    assertEquals(listOf(2u, 5u, 8u), uintList)

    val ulongList = mutableListOf<ULong>()
    val ulongProgression = 1uL..10uL
    for (i in (ulongProgression.reversed() step 2L).reversed() step 3L) {
        ulongList += i
    }
    assertEquals(listOf(2uL, 5uL, 8uL), ulongList)

    return "OK"
}
interface Muern
external  fun  hzyfj(): Short?
class Vrpbp


Combined output:
====================
Type mismatch: inferred type is Short? but Short was expected