// INVOCATOR_FAIL
// result:[-p, library, -o, lib.klib, projectTmp/oldKlib.kt]
// result:[-p, library, -l, lib.klib, -o, main.klib, projectTmp/main.kt]

// files
// main.kt
// isKlib=false
fun main() {


val ngtqd: Oxhcu = Oxhcu()
val cnazm: String = box()
val baimx: Float = ngtqd.myge
}
// oldKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val uintList  = mutableListOf<UInt>()
    for (i in 1u until 2u step 2) {
        uintList += i
    }
    assertEquals(listOf(1u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in 1uL until 2uL step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1uL), ulongList)

    return "OK"
}
class Oxhcu{
private val myge: Float  
get() = -20.27166f
}
// newKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val uintList  = mutableListOf<UInt>()
    for (i in 1u until 2u step 2) {
        uintList += i
    }
    assertEquals(listOf(1u), uintList)

    val ulongList = mutableListOf<ULong>()
    for (i in 1uL until 2uL step 2L) {
        ulongList += i
    }
    assertEquals(listOf(1uL), ulongList)

    return "OK"
}
class Oxhcu{
private val myge: Float  
get() = -20.27166f
public val uqcf: ULong?  
get() = 46.toULong()
}


Combined output:
====================
Cannot access 'myge': it is private in 'Oxhcu'