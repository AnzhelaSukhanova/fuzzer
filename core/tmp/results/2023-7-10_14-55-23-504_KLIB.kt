// INVOCATOR_FAIL
// result:[-p, library, -o, lib.klib, projectTmp/oldKlib.kt]
// result:[-p, library, -l, lib.klib, -o, main.klib, projectTmp/main.kt]

// files
// main.kt
// isKlib=false
fun main() {


val jgavs: Efywg = object: Efywg {
}
val kplqy: String = box()
val fjprp: Function2 = rwhuq()

}
// oldKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    for (i in 7 downTo 1 step 7) {
        intList += i
    }
    assertEquals(listOf(7), intList)

    val longList = mutableListOf<Long>()
    for (i in 7L downTo 1L step 7L) {
        longList += i
    }
    assertEquals(listOf(7L), longList)

    val charList = mutableListOf<Char>()
    for (i in 'g' downTo 'a' step 7) {
        charList += i
    }
    assertEquals(listOf('g'), charList)

    return "OK"
}
interface Efywg
fun  rwhuq(): Function2<UInt, UByte, Array<Efywg>> { TODO() }
// newKlib.kt
// isKlib=true
// Auto-generated by GenerateSteppedRangesCodegenTestData. Do not edit!
// DONT_TARGET_EXACT_BACKEND: WASM
// KJS_WITH_FULL_RUNTIME
// WITH_RUNTIME
import kotlin.test.*

fun box(): String {
    val intList = mutableListOf<Int>()
    for (i in 7 downTo 1 step 7) {
        intList += i
    }
    assertEquals(listOf(7), intList)

    val longList = mutableListOf<Long>()
    for (i in 7L downTo 1L step 7L) {
        longList += i
    }
    assertEquals(listOf(7L), longList)

    val charList = mutableListOf<Char>()
    for (i in 'g' downTo 'a' step 7) {
        charList += i
    }
    assertEquals(listOf('g'), charList)

    return "OK"
}
private interface Efywg
fun  rwhuq(): Function2<UInt, UByte, Array<Efywg>> { TODO() }


Combined output:
====================
3 type arguments expected for interface Function2<in P1, in P2, out R>